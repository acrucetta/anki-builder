Q: What is the MapReduce programming model?; 
A: MapReduce is a programming model and an associated implementation for processing and generating large data sets. Users specify a map function that processes a key/value pair to generate a set of intermediate key/value pairs, and a reduce function that merges all intermediate values associated with the same intermediate key. Programs written in this functional style are automatically parallelized and executed on a large cluster of commodity machines. The run-time system takes care of the details of partitioning the input data, scheduling the program’s execution across a set of machines, handling machine failures, and managing the required inter-machine communication.;
Q: How does the MapReduce system handle machine failures?; 
A: The run-time system takes care of the details of partitioning the input data, scheduling the program’s execution across a set of machines, handling machine failures, and managing the required inter-machine communication. The system handles machine failures by re-executing the affected tasks on other machines in the cluster.;
Q: What are some of the advantages of using the MapReduce programming model?; 
A: The major advantages of using the MapReduce programming model are its simplicity and its scalability. Programs written in this functional style are automatically parallelized and executed on a large cluster of commodity machines. It also allows programmers without any experience with parallel and distributed systems to easily utilize the resources of a large distributed system. MapReduce is highly scalable, allowing a typical MapReduce computation to process many terabytes of data on thousands of machines.;
Q: What are the two main functions of the MapReduce programming model?; 
A: The two main functions of the MapReduce programming model are the map function and the reduce function. The map function processes a key/value pair to generate a set of intermediate key/value pairs, and the reduce function merges all intermediate values associated with the same intermediate key.;
Q: What are some of the real world tasks that can be expressed in the MapReduce programming model?; 
A: Some of the real world tasks that can be expressed in the MapReduce programming model include indexing, graph structure representation, page crawling summaries, and frequent query analysis. MapReduce can be used to process large amounts of raw data, such as crawled documents, web request logs, etc., to compute various kinds of derived data.